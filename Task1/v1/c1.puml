@startuml
' C4-PlantUML (Context)
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml
' Доп. стили
LAYOUT_WITH_LEGEND()
SHOW_PERSON_OUTLINE()

title C4 Context — Платформа мониторинга и управления животноводческими фермами

' Люди
Person(op, "Оператор / Зоотехник", "Следит за событиями, подтверждает инциденты, управляет оборудованием.")
Person(oncall, "Дежурный сотрудник на ферме", "Получает локальные уведомления при отсутствии интернета.")
Person(mobileUser, "Пользователь мобильного/веб-приложения", "Просмотр метрик, видео и уведомлений.")

' Внешние системы
System_Ext(auth, "Провайдер аутентификации (OIDC/SAML)", "Современная аутентификация и авторизация, роли.")
System_Ext(msgGw, "Шлюз уведомлений", "SMS/Push/Email для оповещений.")
System_Ext(erp, "ERP/Учёт запасов", "Принимает базовые и пользовательские метрики, статусы запасов.")
System_Ext(bi, "BI/Monitoring", "Забирает метрики и события через API.")
System_Ext(mlPartner, "Партнёрская ML-модель", "Готовая модель видеоналитики.")
System_Ext(feeders, "Кормушки/поилки разных производителей", "Управление дозированием корма/воды.")
System_Ext(waterFilt, "Система фильтрации воды", "Телеметрия и статусы.")
System_Ext(cameras, "IP-камеры (разных производителей)", "RTSP/ONVIF, дневной/ночной режим.")
System_Ext(altNet, "Альтернативные каналы связи", "LTE/5G, LoRa/радиоканал для деградационного режима.")

' Наша система (двухзвенная архитектура)
System_Boundary(prod, "Платформа мониторинга и управления (наша система)") {
  System(core, "Центральный сервер (Cloud/DC)", "Агрегация, аналитика, API, управление, федерация агентов.")
  System(agent, "Агент фермы (Edge)", "Реальное время, офлайн-работа, управление оборудованием, локальные уведомления.")
}

' Связи пользователей
Rel(op, core, "Работа через веб-интерфейс / API")
Rel(mobileUser, core, "Мобильное/веб-приложение (API)")
Rel(oncall, agent, "Локальные оповещения", "SMS/Push/звонок")

' Связи с внешними системами
Rel(core, auth, "SSO / OIDC / SAML", "OAuth2/OIDC/SAML")
Rel(core, msgGw, "Отправка уведомлений", "API")
Rel(core, erp, "Публикация метрик/событий", "HTTPS/Webhook")
Rel(core, bi, "Экспорт метрик", "Pull/Push (Prometheus/OpenMetrics)")
Rel(core, mlPartner, "Получение/обновление модели", "Artifact/Registry")
Rel(agent, feeders, "Команды управления", "Вендорские протоколы/API")
Rel(agent, waterFilt, "Телеметрия и статусы", "Modbus/OPC-UA/HTTP")
Rel(agent, cameras, "Видеопотоки для аналитики", "RTSP/ONVIF")
Rel(agent, altNet, "Резервная связь", "При деградации Wi-Fi")

' Взаимодействие центрального сервера и агентов
Rel(core, agent, "Синхронизация конфигурации, метрик и событий (допустима задержка ≤10 мин)", "MQTT/HTTPS/WebSocket")
Rel(agent, core, "Отправка инцидентов, телеметрии, видеоснимков/фич", "С буферизацией офлайн")

' Нотации по требованиям
UpdateElementStyle(core, $fontColor="white", $bgColor="#1168bd")
UpdateElementStyle(agent, $fontColor="white", $bgColor="#438dd5")

' Ключевые требования (как заметки)
AddBoundaryTag(prod, "НФТ", "Нефункциональные требования")

@enduml
